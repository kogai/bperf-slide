(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{10:function(e,a,t){e.exports=t.p+"010b5611a2384196cb0b61d17bf60671.webp"},11:function(e,a,t){e.exports=t.p+"1d3bd156f0286c54ff58c1dc33d89365.webp"},15:function(e,a,t){t(16),t(35),e.exports=t(32)},30:function(e,a,t){var l={"./0-title.md":31};function n(e){var a=c(e);return t(a)}function c(e){if(!t.o(l,e)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return l[e]}n.keys=function(){return Object.keys(l)},n.resolve=c,e.exports=n,n.id=30},31:function(e,a,t){"use strict";t.r(a),t.d(a,"slides",(function(){return b})),t.d(a,"fusumaProps",(function(){return p})),t.d(a,"default",(function(){return j}));var l=t(2),n=t.n(l),c=t(1);function r(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},c=Object.keys(e);for(l=0;l<c.length;l++)t=c[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(l=0;l<c.length;l++)t=c[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}function u(){return(u=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}var b=[function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"2019年5月, Firebase performance for Webが発表 🎉"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://firebase.googleblog.com/2019/05/whats-new-Google-IO-2019.html"}),"https://firebase.googleblog.com/2019/05/whats-new-Google-IO-2019.html")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"web developers can understand how real users are experiencing their app in the wild.")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"監視してますか？"),Object(c.a)("p",null,"「入門 監視」より"),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"まず監視を追加すべきなのは、ユーザがあなたのアプリケーションとやり取りをするところです。\nApacheのノードが何代動いているか、ジョブに対していくつのワーカが使用可能かといったアプリケーションの実装の詳細をユーザは気にしません。")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"MPA時代のクライアント・サーバモデルと、監視構成図"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"ユーザ領域で起こるのはHTMLによる描画処理のみ。"),Object(c.a)("li",{parentName:"ul"},"描画パフォーマンスはブラウザのHTML解釈速度にのみ依存"),Object(c.a)("li",{parentName:"ul"},"アプリケーション開発者はブラウザでの描画速度について責任がない")),Object(c.a)("img",{width:"797",alt:"image",src:t(10)}))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"SPA時代のクライアント・サーバモデルと、監視の実情(図)"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"ユーザ領域ではHTMLによる(初期)描画処理に加えて、ユーザ操作を起点としたHTML再生成処理が頻繁に発生する。"),Object(c.a)("li",{parentName:"ul"},"パフォーマンスはブラウザの描画処理に加えて、HTML再生成処理に大きく依存する"),Object(c.a)("li",{parentName:"ul"},"アプリケーション開発者はブラウザでの描画速度に責任がある")),Object(c.a)("img",{width:"909",alt:"image",src:t(11)}))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"パフォーマンス監視のアプローチ"),Object(c.a)("p",null,"どちらかだけでは不完全"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Real User Monitoring",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"GoogleAnalytics"),Object(c.a)("li",{parentName:"ul"},"LogRocket"),Object(c.a)("li",{parentName:"ul"},"NewRelicBrowser"))),Object(c.a)("li",{parentName:"ul"},"Synthetic Monitoring",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"WebPageTest"),Object(c.a)("li",{parentName:"ul"},"LightHouse")))))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"Real User Monitoring"),Object(c.a)("p",null,"選択肢が少なく、満足出来るものがない"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"GoogleAnalytics",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"パフォーマンス計測のためのツールではない"),Object(c.a)("li",{parentName:"ul"},"必要なメトリクスはほぼ全て自分で送信する必要がある"))),Object(c.a)("li",{parentName:"ul"},"LogRocket",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"パフォーマンス計測のためのツールではない"),Object(c.a)("li",{parentName:"ul"},"パフォーマンス系のメトリクスを一覧出来ない"))),Object(c.a)("li",{parentName:"ul"},"NewRelicBrowser",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"SPA時代に対応出来ていない"),Object(c.a)("li",{parentName:"ul"},"LoadとPaintの区別がない"),Object(c.a)("li",{parentName:"ul"},"API通信が有料(Paintとの関連付けもない?)")))))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"First Meaningful Paint"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://developers.google.com/web/tools/lighthouse/audits/first-meaningful-paint"}),"https://developers.google.com/web/tools/lighthouse/audits/first-meaningful-paint")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"Page load is a key aspect of how a user perceives the performance of your page")),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"最初の「意味のある」描画"),Object(c.a)("li",{parentName:"ul"},"最低限、ここが計測できないとしょうがない")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"RAILによるパフォーマンス影響要因のモデル化"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://developers.google.com/web/fundamentals/performance/rail"}),"https://developers.google.com/web/fundamentals/performance/rail")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"RAIL is a user-centric performance model that breaks down the user's experience into key actions.")),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Response(50ms以下で反応する)"),Object(c.a)("li",{parentName:"ul"},"Animation(10msを1frameに)"),Object(c.a)("li",{parentName:"ul"},"Idle(ユーザ操作受付時間はなるべく長く)"),Object(c.a)("li",{parentName:"ul"},"Load(操作可能になるまで、3G且つモバイル端末で5s)")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"@4月中旬"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"必要なはずなのに選択肢がない"),Object(c.a)("li",{parentName:"ul"},"作ってみたら需要があるのでは"),Object(c.a)("li",{parentName:"ul"},"最近個人でWebサービスを作ってない")),Object(c.a)("h4",null,"Let's get started 👉 ",Object(c.a)("a",u({parentName:"h4"},{href:"https://github.com/kogai/bperf"}),"https://github.com/kogai/bperf")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"ゴールデンウィークにパフォーマンス監視ツールを作るぞ！"),Object(c.a)("p",null,"🔥 🔥 🔥"))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"走り出すまえに"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"個人開発で一番大事なのはマイルストーンの設置と達成"),Object(c.a)("li",{parentName:"ul"},"自分のやる気だけが頼りなので、最大限スポイルしないように動く"),Object(c.a)("li",{parentName:"ul"},"コストの高いこと・面倒なことは細かく前倒しで片付けていく",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"調査"),Object(c.a)("li",{parentName:"ul"},"考察"),Object(c.a)("li",{parentName:"ul"},"開発環境の構築"),Object(c.a)("li",{parentName:"ul"},"CIの整備")))))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"PoC"),Object(c.a)("p",null,"パフォーマンスの監視のためのAPI"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver"}),"PerformanceObserver")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver"}),"MutationObserver"))),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://github.com/kogai/bperf/commit/eb4a61c4cc93b4c116f577f787f46eaead10aa81"}),"ゴールデンウィーク前に、計測が出来ること"),"までは分かった。"))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"開発環境"),Object(c.a)("p",null,"残りはWebサービスの体裁を作れば良い。\n新しい言語に手を出すのが目的ではないので書けるもの中から選ぶ。"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Go(人口がそれなりに多い、安全ではないものの静的型検査できる)"),Object(c.a)("li",{parentName:"ul"},"TypeScript(最もシンプルなブラウザアプリ開発言語)")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"Webサービスの体裁？"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"セッション管理する"),Object(c.a)("li",{parentName:"ul"},"どこかにメトリクスを保存する"),Object(c.a)("li",{parentName:"ul"},"メトリクスをチャートに描画する")),Object(c.a)("p",null,"をゴールにした"))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"Misc"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"開発体制はインクリメンタルに改善していく"),Object(c.a)("li",{parentName:"ul"},"最初にしっかり土台を作ると必ず頓挫する(自分調べ)"),Object(c.a)("li",{parentName:"ul"},"テストどころかコードもろくにないのにCI構築に時間を掛けない"),Object(c.a)("li",{parentName:"ul"},"ランタイムのバージョンは固定しない"),Object(c.a)("li",{parentName:"ul"},"将来困るかも? -> 困れば良い。受け入れる。")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"TypeScript?"),Object(c.a)("p",null,"新しい言語に手を出すのが目的ではないと言いつつ、TypeScriptで開発を始めると"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"型システムの健全性(と高いレベルの完全性)の欠如"),Object(c.a)("li",{parentName:"ul"},"標準ライブラリの欠如"),Object(c.a)("li",{parentName:"ul"},"Mutable/Immutableの混合")),Object(c.a)("p",null,"といった要素がリソースを摩耗しだす\n「これは平日の昼間にやっているやつでは？」"))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"TypeScript -> ?"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"個人開発の一番良いところは、自分の能力以外に制約がないところ"),Object(c.a)("li",{parentName:"ul"},"課題に対する妥当性すらなくて良い",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"例: ",Object(c.a)("a",u({parentName:"li"},{href:"https://github.com/kogai/typed_i18n"}),"JSエコシステムのためのライブラリをOCamlで書く")),Object(c.a)("li",{parentName:"ul"},"例: ",Object(c.a)("a",u({parentName:"li"},{href:"https://github.com/kogai/trs"}),"シェルで良いものをRustで書く"))))))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"TypeScript -> Elm"),Object(c.a)("p",null,Object(c.a)("img",u({parentName:"p"},{src:"https://files.esa.io/uploads/production/attachments/12180/2019/09/10/56893/6bb07d4b-1c6e-40d5-a413-8736fa644ae1.png",alt:"image.png (7.4 kB)"}))))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"Elm!"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"型システムが健全(かつ完全?)"),Object(c.a)("li",{parentName:"ul"},"標準ライブラリがある"),Object(c.a)("li",{parentName:"ul"},"Immutable")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"健全性と完全性について"),Object(c.a)("p",null,"野矢茂樹「論理学」より"),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"命題論理の公理系LPの無矛盾性")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"(1) 定理はすべて論理的真理である")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"(2) 論理的真理のすべてが定理として証明されうる")),Object(c.a)("p",null,"1が健全性、2が完全性とのこと"))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"健全性と完全性について(プログラマ視点)"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://soutaro.hatenablog.com/entry/20080319/1205944749"}),"https://soutaro.hatenablog.com/entry/20080319/1205944749")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"「型推論が健全性を持っている」というのは，「型が推論できたら，そのプログラムは正しい」ということ")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"「型推論が完全性を持っている」というのは，「正しいプログラムは必ず型が推論できる」ということ")),Object(c.a)("p",null,"カリー・ハワード同型対応(型検査が通れば型定義の正しさは証明されたと見なしてよい、みたいなこと)から、"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"定理はすべて論理的真理である",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"-> 型定義・型制約が正しいのであれば、正しい(定理=型同士に矛盾のない)プログラムである"))),Object(c.a)("li",{parentName:"ul"},"論理的真理のすべてが定理として証明されうる",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"-> 正しいプログラムは（注釈せずとも何らかの形の）型定義・型制約(=定理)を持ちうる")))),Object(c.a)("p",null,"という風に理解している。(公理が言語組み込みの型、定理がプログラマが定義した型、というイメージ)"),Object(c.a)("p",null,"Elmで書いたコードは、TypeScriptのそれに比べて「値の種類からくる矛盾が存在しない」且つ「ほとんどのケースで型注釈が不要」ということ。"))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"アーキテクチャ"),Object(c.a)("p",null,"とやっていると、だんだんサービスの構成要素が見えてきた"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"計測スクリプト(ユーザ環境でメトリクスを収集する。エージェント。)"),Object(c.a)("li",{parentName:"ul"},"APIサーバ(計測したメトリクスを保存、ダッシュボードへ開放する)"),Object(c.a)("li",{parentName:"ul"},"ダッシュボード(計測したメトリクスを閲覧する)")),Object(c.a)("p",null,"これらは全て別々の環境で動く、目的も違う(ついでに開発言語も違う)\n",Object(c.a)("inlineCode",{parentName:"p"},"beacon"),", ",Object(c.a)("inlineCode",{parentName:"p"},"api"),", ",Object(c.a)("inlineCode",{parentName:"p"},"web")," の3パーツに分けて、段々動くようになってきた。"))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"Apiの構成"),Object(c.a)("p",null,"大体一般的なMVCっぽいディレクトリ構成。 👇 を使った"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Gin",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"WAF"),Object(c.a)("li",{parentName:"ul"},"素のhttpパッケージで充分という意見もある"),Object(c.a)("li",{parentName:"ul"},"とは言えルーティングのボイラープレートやプラグイン管理くらいは外注したい"))),Object(c.a)("li",{parentName:"ul"},"Gorm",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"ORM"),Object(c.a)("li",{parentName:"ul"},"Goらしく薄め。少し複雑なクエリを書こうとすると、生のSQLを書く必要がある")))))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"Webの構成"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Elmの記事ではMVVMが1枚のファイルに収まった規模のもので紹介されていることが多い"),Object(c.a)("li",{parentName:"ul"},"当然Real worldではそのサイズには収まらない（それくらいなら生DOM APIで充分）"),Object(c.a)("li",{parentName:"ul"},"画面数枚・APIリクエストあり・時間(",Object(c.a)("inlineCode",{parentName:"li"},"作用"),")表現ありのところまでは作ったので、動くものを作る上で必要なところはおよそ踏めたと思う"),Object(c.a)("li",{parentName:"ul"},"純粋関数型言語(多分)なので、基本的に",Object(c.a)("inlineCode",{parentName:"li"},"作用"),"はプログラムのトップレベルで管理する"),Object(c.a)("li",{parentName:"ul"},"公式ではないけど、",Object(c.a)("a",u({parentName:"li"},{href:"https://github.com/rtfeldman/elm-spa-example"}),"Elm作者を擁する会社の提唱するサンプル構成"))))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"Elmのディレクトリ構成"),Object(c.a)("p",null,"別にここから始める必要はない。",Object(c.a)("inlineCode",{parentName:"p"},"app.elm"),"から始めて、コードの増加に沿ってディレクトリに分ければ良い。"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Model",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"Authモデルのコードがわかりやすいかも"),Object(c.a)("li",{parentName:"ul"},"ReduxのStore/Actionと対応していると考えて間違いではない"))),Object(c.a)("li",{parentName:"ul"},"Page",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"ViewModel, Controllerに近いものと思って良い"),Object(c.a)("li",{parentName:"ul"},"Modelとの棲み分けが重要(あくまでViewとの接続のための状態管理)"))),Object(c.a)("li",{parentName:"ul"},"View",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"JSX記法を排除しているので読みやすい(というか、仮想DOMの生成関数に過ぎないという事実が明確になる)"),Object(c.a)("li",{parentName:"ul"},"style, css-classなども静的に型付けされていて、変更に強い"),Object(c.a)("li",{parentName:"ul"},"何らかの作用を持つというコンテキストを含んだ仮想DOMとして定義される(",Object(c.a)("inlineCode",{parentName:"li"},"Html msg"),", msgは型変数)"))),Object(c.a)("li",{parentName:"ul"},"Api",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"デコーダとレスポンスの型による、静的・動的型検査(漸進的型付けではないので、動的型検査も言語の中に組み込めみやすい)"),Object(c.a)("li",{parentName:"ul"},"headerなどもある程度静的に型検査される"),Object(c.a)("li",{parentName:"ul"},"フォームのバリデーションをデータモデルのデコーダとして捉えているライブラリがあって面白かった")))))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"純粋性からくる注意点"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"HTTPリクエスト、ファイルアクセス、時間、ランダム性、ランタイムへのイベントキューイングなど、全て外部世界の作用"),Object(c.a)("li",{parentName:"ul"},"狭く見ると、現在時刻を取得するだけでやたら手間が掛かるように見えるかも"),Object(c.a)("li",{parentName:"ul"},"大抵元は取れる")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"デモ"))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"その後"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"大体動いたし、そろそろどこでサービス展開するか考えるか"),Object(c.a)("li",{parentName:"ul"},"ログをDBに直で保存するとコストやばそうだから、その前に別の基盤に移すか。Hadoopとか?よく知らないけど"),Object(c.a)("li",{parentName:"ul"},"チャートもデータビジュアライゼーションの本を参考にきちんと設計するぞ"),Object(c.a)("li",{parentName:"ul"},"🔥 🔥 🔥 やるぞ  🔥 🔥 🔥")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"2019年5月, Firebase performance for Webが発表 🎉"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://firebase.googleblog.com/2019/05/whats-new-Google-IO-2019.html"}),"https://firebase.googleblog.com/2019/05/whats-new-Google-IO-2019.html")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"web developers can understand how real users are experiencing their app in the wild.")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"完。"))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"まとめ"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"自分のやる気という最重要リソースの管理"),Object(c.a)("li",{parentName:"ul"},"Elm&GoでのWeb開発、過不足なくて良い"),Object(c.a)("li",{parentName:"ul"},"個人開発で選んだテーマをそのまま解決するサービス・ツールが途中で出てくることはとてもよくある"),Object(c.a)("li",{parentName:"ul"},"捨てたものでも、ある程度手を掛けたものならこうやって再利用出来る(言い訳)")))},function(e){return Object(c.a)(n.a.Fragment,null,Object(c.a)("h2",null,"参考"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://developers.google.com/web/fundamentals/performance/rail"}),"Google Developers")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://guide.elm-lang.org/"}),"An Introduction to Elm")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/34CwLK3"}),"入門 監視")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2HYq4IA"}),"論理学")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2UGUep4"}),"基礎からわかる Elm")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/31mhwmo"}),"Webフロントエンド ハイパフォーマンス チューニング")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/31cjJRo"}),"ハイパフォーマンス ブラウザネットワーキング ―ネットワークアプリケーションのためのパフォーマンス最適化")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2UNyrfh"}),"The Go Programming Language")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2ZNYO9P"}),"Go Programming Blueprints")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2Ln4y2u"}),"プログラミング言語Goフレーズブック")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2NQ01qV"}),"Third-Party JavaScript"))))}],p=[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],O={slides:b},i="wrapper";function j(e){var a=e.components,l=r(e,["components"]);return Object(c.a)(i,u({},O,l,{components:a,mdxType:"MDXLayout"}),Object(c.a)("h2",null,"2019年5月, Firebase performance for Webが発表 🎉"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://firebase.googleblog.com/2019/05/whats-new-Google-IO-2019.html"}),"https://firebase.googleblog.com/2019/05/whats-new-Google-IO-2019.html")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"web developers can understand how real users are experiencing their app in the wild.")),Object(c.a)("hr",null),Object(c.a)("h2",null,"監視してますか？"),Object(c.a)("p",null,"「入門 監視」より"),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"まず監視を追加すべきなのは、ユーザがあなたのアプリケーションとやり取りをするところです。\nApacheのノードが何代動いているか、ジョブに対していくつのワーカが使用可能かといったアプリケーションの実装の詳細をユーザは気にしません。")),Object(c.a)("hr",null),Object(c.a)("h2",null,"MPA時代のクライアント・サーバモデルと、監視構成図"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"ユーザ領域で起こるのはHTMLによる描画処理のみ。"),Object(c.a)("li",{parentName:"ul"},"描画パフォーマンスはブラウザのHTML解釈速度にのみ依存"),Object(c.a)("li",{parentName:"ul"},"アプリケーション開発者はブラウザでの描画速度について責任がない")),Object(c.a)("img",{width:"797",alt:"image",src:t(10)}),Object(c.a)("hr",null),Object(c.a)("h2",null,"SPA時代のクライアント・サーバモデルと、監視の実情(図)"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"ユーザ領域ではHTMLによる(初期)描画処理に加えて、ユーザ操作を起点としたHTML再生成処理が頻繁に発生する。"),Object(c.a)("li",{parentName:"ul"},"パフォーマンスはブラウザの描画処理に加えて、HTML再生成処理に大きく依存する"),Object(c.a)("li",{parentName:"ul"},"アプリケーション開発者はブラウザでの描画速度に責任がある")),Object(c.a)("img",{width:"909",alt:"image",src:t(11)}),Object(c.a)("hr",null),Object(c.a)("h2",null,"パフォーマンス監視のアプローチ"),Object(c.a)("p",null,"どちらかだけでは不完全"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Real User Monitoring",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"GoogleAnalytics"),Object(c.a)("li",{parentName:"ul"},"LogRocket"),Object(c.a)("li",{parentName:"ul"},"NewRelicBrowser"))),Object(c.a)("li",{parentName:"ul"},"Synthetic Monitoring",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"WebPageTest"),Object(c.a)("li",{parentName:"ul"},"LightHouse")))),Object(c.a)("hr",null),Object(c.a)("h2",null,"Real User Monitoring"),Object(c.a)("p",null,"選択肢が少なく、満足出来るものがない"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"GoogleAnalytics",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"パフォーマンス計測のためのツールではない"),Object(c.a)("li",{parentName:"ul"},"必要なメトリクスはほぼ全て自分で送信する必要がある"))),Object(c.a)("li",{parentName:"ul"},"LogRocket",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"パフォーマンス計測のためのツールではない"),Object(c.a)("li",{parentName:"ul"},"パフォーマンス系のメトリクスを一覧出来ない"))),Object(c.a)("li",{parentName:"ul"},"NewRelicBrowser",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"SPA時代に対応出来ていない"),Object(c.a)("li",{parentName:"ul"},"LoadとPaintの区別がない"),Object(c.a)("li",{parentName:"ul"},"API通信が有料(Paintとの関連付けもない?)")))),Object(c.a)("hr",null),Object(c.a)("h2",null,"First Meaningful Paint"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://developers.google.com/web/tools/lighthouse/audits/first-meaningful-paint"}),"https://developers.google.com/web/tools/lighthouse/audits/first-meaningful-paint")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"Page load is a key aspect of how a user perceives the performance of your page")),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"最初の「意味のある」描画"),Object(c.a)("li",{parentName:"ul"},"最低限、ここが計測できないとしょうがない")),Object(c.a)("hr",null),Object(c.a)("h2",null,"RAILによるパフォーマンス影響要因のモデル化"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://developers.google.com/web/fundamentals/performance/rail"}),"https://developers.google.com/web/fundamentals/performance/rail")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"RAIL is a user-centric performance model that breaks down the user's experience into key actions.")),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Response(50ms以下で反応する)"),Object(c.a)("li",{parentName:"ul"},"Animation(10msを1frameに)"),Object(c.a)("li",{parentName:"ul"},"Idle(ユーザ操作受付時間はなるべく長く)"),Object(c.a)("li",{parentName:"ul"},"Load(操作可能になるまで、3G且つモバイル端末で5s)")),Object(c.a)("hr",null),Object(c.a)("h2",null,"@4月中旬"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"必要なはずなのに選択肢がない"),Object(c.a)("li",{parentName:"ul"},"作ってみたら需要があるのでは"),Object(c.a)("li",{parentName:"ul"},"最近個人でWebサービスを作ってない")),Object(c.a)("h4",null,"Let's get started 👉 ",Object(c.a)("a",u({parentName:"h4"},{href:"https://github.com/kogai/bperf"}),"https://github.com/kogai/bperf")),Object(c.a)("hr",null),Object(c.a)("h2",null,"ゴールデンウィークにパフォーマンス監視ツールを作るぞ！"),Object(c.a)("p",null,"🔥 🔥 🔥"),Object(c.a)("hr",null),Object(c.a)("h2",null,"走り出すまえに"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"個人開発で一番大事なのはマイルストーンの設置と達成"),Object(c.a)("li",{parentName:"ul"},"自分のやる気だけが頼りなので、最大限スポイルしないように動く"),Object(c.a)("li",{parentName:"ul"},"コストの高いこと・面倒なことは細かく前倒しで片付けていく",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"調査"),Object(c.a)("li",{parentName:"ul"},"考察"),Object(c.a)("li",{parentName:"ul"},"開発環境の構築"),Object(c.a)("li",{parentName:"ul"},"CIの整備")))),Object(c.a)("hr",null),Object(c.a)("h2",null,"PoC"),Object(c.a)("p",null,"パフォーマンスの監視のためのAPI"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver"}),"PerformanceObserver")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver"}),"MutationObserver"))),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://github.com/kogai/bperf/commit/eb4a61c4cc93b4c116f577f787f46eaead10aa81"}),"ゴールデンウィーク前に、計測が出来ること"),"までは分かった。"),Object(c.a)("hr",null),Object(c.a)("h2",null,"開発環境"),Object(c.a)("p",null,"残りはWebサービスの体裁を作れば良い。\n新しい言語に手を出すのが目的ではないので書けるもの中から選ぶ。"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Go(人口がそれなりに多い、安全ではないものの静的型検査できる)"),Object(c.a)("li",{parentName:"ul"},"TypeScript(最もシンプルなブラウザアプリ開発言語)")),Object(c.a)("hr",null),Object(c.a)("h2",null,"Webサービスの体裁？"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"セッション管理する"),Object(c.a)("li",{parentName:"ul"},"どこかにメトリクスを保存する"),Object(c.a)("li",{parentName:"ul"},"メトリクスをチャートに描画する")),Object(c.a)("p",null,"をゴールにした"),Object(c.a)("hr",null),Object(c.a)("h2",null,"Misc"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"開発体制はインクリメンタルに改善していく"),Object(c.a)("li",{parentName:"ul"},"最初にしっかり土台を作ると必ず頓挫する(自分調べ)"),Object(c.a)("li",{parentName:"ul"},"テストどころかコードもろくにないのにCI構築に時間を掛けない"),Object(c.a)("li",{parentName:"ul"},"ランタイムのバージョンは固定しない"),Object(c.a)("li",{parentName:"ul"},"将来困るかも? -> 困れば良い。受け入れる。")),Object(c.a)("hr",null),Object(c.a)("h2",null,"TypeScript?"),Object(c.a)("p",null,"新しい言語に手を出すのが目的ではないと言いつつ、TypeScriptで開発を始めると"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"型システムの健全性(と高いレベルの完全性)の欠如"),Object(c.a)("li",{parentName:"ul"},"標準ライブラリの欠如"),Object(c.a)("li",{parentName:"ul"},"Mutable/Immutableの混合")),Object(c.a)("p",null,"といった要素がリソースを摩耗しだす\n「これは平日の昼間にやっているやつでは？」"),Object(c.a)("hr",null),Object(c.a)("h2",null,"TypeScript -> ?"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"個人開発の一番良いところは、自分の能力以外に制約がないところ"),Object(c.a)("li",{parentName:"ul"},"課題に対する妥当性すらなくて良い",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"例: ",Object(c.a)("a",u({parentName:"li"},{href:"https://github.com/kogai/typed_i18n"}),"JSエコシステムのためのライブラリをOCamlで書く")),Object(c.a)("li",{parentName:"ul"},"例: ",Object(c.a)("a",u({parentName:"li"},{href:"https://github.com/kogai/trs"}),"シェルで良いものをRustで書く"))))),Object(c.a)("hr",null),Object(c.a)("h2",null,"TypeScript -> Elm"),Object(c.a)("p",null,Object(c.a)("img",u({parentName:"p"},{src:"https://files.esa.io/uploads/production/attachments/12180/2019/09/10/56893/6bb07d4b-1c6e-40d5-a413-8736fa644ae1.png",alt:"image.png (7.4 kB)"}))),Object(c.a)("hr",null),Object(c.a)("h2",null,"Elm!"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"型システムが健全(かつ完全?)"),Object(c.a)("li",{parentName:"ul"},"標準ライブラリがある"),Object(c.a)("li",{parentName:"ul"},"Immutable")),Object(c.a)("hr",null),Object(c.a)("h2",null,"健全性と完全性について"),Object(c.a)("p",null,"野矢茂樹「論理学」より"),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"命題論理の公理系LPの無矛盾性")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"(1) 定理はすべて論理的真理である")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"(2) 論理的真理のすべてが定理として証明されうる")),Object(c.a)("p",null,"1が健全性、2が完全性とのこと"),Object(c.a)("hr",null),Object(c.a)("h2",null,"健全性と完全性について(プログラマ視点)"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://soutaro.hatenablog.com/entry/20080319/1205944749"}),"https://soutaro.hatenablog.com/entry/20080319/1205944749")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"「型推論が健全性を持っている」というのは，「型が推論できたら，そのプログラムは正しい」ということ")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"「型推論が完全性を持っている」というのは，「正しいプログラムは必ず型が推論できる」ということ")),Object(c.a)("p",null,"カリー・ハワード同型対応(型検査が通れば型定義の正しさは証明されたと見なしてよい、みたいなこと)から、"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"定理はすべて論理的真理である",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"-> 型定義・型制約が正しいのであれば、正しい(定理=型同士に矛盾のない)プログラムである"))),Object(c.a)("li",{parentName:"ul"},"論理的真理のすべてが定理として証明されうる",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"-> 正しいプログラムは（注釈せずとも何らかの形の）型定義・型制約(=定理)を持ちうる")))),Object(c.a)("p",null,"という風に理解している。(公理が言語組み込みの型、定理がプログラマが定義した型、というイメージ)"),Object(c.a)("p",null,"Elmで書いたコードは、TypeScriptのそれに比べて「値の種類からくる矛盾が存在しない」且つ「ほとんどのケースで型注釈が不要」ということ。"),Object(c.a)("hr",null),Object(c.a)("h2",null,"アーキテクチャ"),Object(c.a)("p",null,"とやっていると、だんだんサービスの構成要素が見えてきた"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"計測スクリプト(ユーザ環境でメトリクスを収集する。エージェント。)"),Object(c.a)("li",{parentName:"ul"},"APIサーバ(計測したメトリクスを保存、ダッシュボードへ開放する)"),Object(c.a)("li",{parentName:"ul"},"ダッシュボード(計測したメトリクスを閲覧する)")),Object(c.a)("p",null,"これらは全て別々の環境で動く、目的も違う(ついでに開発言語も違う)\n",Object(c.a)("inlineCode",{parentName:"p"},"beacon"),", ",Object(c.a)("inlineCode",{parentName:"p"},"api"),", ",Object(c.a)("inlineCode",{parentName:"p"},"web")," の3パーツに分けて、段々動くようになってきた。"),Object(c.a)("hr",null),Object(c.a)("h2",null,"Apiの構成"),Object(c.a)("p",null,"大体一般的なMVCっぽいディレクトリ構成。 👇 を使った"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Gin",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"WAF"),Object(c.a)("li",{parentName:"ul"},"素のhttpパッケージで充分という意見もある"),Object(c.a)("li",{parentName:"ul"},"とは言えルーティングのボイラープレートやプラグイン管理くらいは外注したい"))),Object(c.a)("li",{parentName:"ul"},"Gorm",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"ORM"),Object(c.a)("li",{parentName:"ul"},"Goらしく薄め。少し複雑なクエリを書こうとすると、生のSQLを書く必要がある")))),Object(c.a)("hr",null),Object(c.a)("h2",null,"Webの構成"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Elmの記事ではMVVMが1枚のファイルに収まった規模のもので紹介されていることが多い"),Object(c.a)("li",{parentName:"ul"},"当然Real worldではそのサイズには収まらない（それくらいなら生DOM APIで充分）"),Object(c.a)("li",{parentName:"ul"},"画面数枚・APIリクエストあり・時間(",Object(c.a)("inlineCode",{parentName:"li"},"作用"),")表現ありのところまでは作ったので、動くものを作る上で必要なところはおよそ踏めたと思う"),Object(c.a)("li",{parentName:"ul"},"純粋関数型言語(多分)なので、基本的に",Object(c.a)("inlineCode",{parentName:"li"},"作用"),"はプログラムのトップレベルで管理する"),Object(c.a)("li",{parentName:"ul"},"公式ではないけど、",Object(c.a)("a",u({parentName:"li"},{href:"https://github.com/rtfeldman/elm-spa-example"}),"Elm作者を擁する会社の提唱するサンプル構成"))),Object(c.a)("hr",null),Object(c.a)("h2",null,"Elmのディレクトリ構成"),Object(c.a)("p",null,"別にここから始める必要はない。",Object(c.a)("inlineCode",{parentName:"p"},"app.elm"),"から始めて、コードの増加に沿ってディレクトリに分ければ良い。"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"Model",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"Authモデルのコードがわかりやすいかも"),Object(c.a)("li",{parentName:"ul"},"ReduxのStore/Actionと対応していると考えて間違いではない"))),Object(c.a)("li",{parentName:"ul"},"Page",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"ViewModel, Controllerに近いものと思って良い"),Object(c.a)("li",{parentName:"ul"},"Modelとの棲み分けが重要(あくまでViewとの接続のための状態管理)"))),Object(c.a)("li",{parentName:"ul"},"View",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"JSX記法を排除しているので読みやすい(というか、仮想DOMの生成関数に過ぎないという事実が明確になる)"),Object(c.a)("li",{parentName:"ul"},"style, css-classなども静的に型付けされていて、変更に強い"),Object(c.a)("li",{parentName:"ul"},"何らかの作用を持つというコンテキストを含んだ仮想DOMとして定義される(",Object(c.a)("inlineCode",{parentName:"li"},"Html msg"),", msgは型変数)"))),Object(c.a)("li",{parentName:"ul"},"Api",Object(c.a)("ul",{parentName:"li"},Object(c.a)("li",{parentName:"ul"},"デコーダとレスポンスの型による、静的・動的型検査(漸進的型付けではないので、動的型検査も言語の中に組み込めみやすい)"),Object(c.a)("li",{parentName:"ul"},"headerなどもある程度静的に型検査される"),Object(c.a)("li",{parentName:"ul"},"フォームのバリデーションをデータモデルのデコーダとして捉えているライブラリがあって面白かった")))),Object(c.a)("hr",null),Object(c.a)("h2",null,"純粋性からくる注意点"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"HTTPリクエスト、ファイルアクセス、時間、ランダム性、ランタイムへのイベントキューイングなど、全て外部世界の作用"),Object(c.a)("li",{parentName:"ul"},"狭く見ると、現在時刻を取得するだけでやたら手間が掛かるように見えるかも"),Object(c.a)("li",{parentName:"ul"},"大抵元は取れる")),Object(c.a)("hr",null),Object(c.a)("h2",null,"デモ"),Object(c.a)("hr",null),Object(c.a)("h2",null,"その後"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"大体動いたし、そろそろどこでサービス展開するか考えるか"),Object(c.a)("li",{parentName:"ul"},"ログをDBに直で保存するとコストやばそうだから、その前に別の基盤に移すか。Hadoopとか?よく知らないけど"),Object(c.a)("li",{parentName:"ul"},"チャートもデータビジュアライゼーションの本を参考にきちんと設計するぞ"),Object(c.a)("li",{parentName:"ul"},"🔥 🔥 🔥 やるぞ  🔥 🔥 🔥")),Object(c.a)("hr",null),Object(c.a)("h2",null,"2019年5月, Firebase performance for Webが発表 🎉"),Object(c.a)("p",null,Object(c.a)("a",u({parentName:"p"},{href:"https://firebase.googleblog.com/2019/05/whats-new-Google-IO-2019.html"}),"https://firebase.googleblog.com/2019/05/whats-new-Google-IO-2019.html")),Object(c.a)("blockquote",null,Object(c.a)("p",{parentName:"blockquote"},"web developers can understand how real users are experiencing their app in the wild.")),Object(c.a)("hr",null),Object(c.a)("h2",null,"完。"),Object(c.a)("hr",null),Object(c.a)("h2",null,"まとめ"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},"自分のやる気という最重要リソースの管理"),Object(c.a)("li",{parentName:"ul"},"Elm&GoでのWeb開発、過不足なくて良い"),Object(c.a)("li",{parentName:"ul"},"個人開発で選んだテーマをそのまま解決するサービス・ツールが途中で出てくることはとてもよくある"),Object(c.a)("li",{parentName:"ul"},"捨てたものでも、ある程度手を掛けたものならこうやって再利用出来る(言い訳)")),Object(c.a)("hr",null),Object(c.a)("h2",null,"参考"),Object(c.a)("ul",null,Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://developers.google.com/web/fundamentals/performance/rail"}),"Google Developers")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://guide.elm-lang.org/"}),"An Introduction to Elm")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/34CwLK3"}),"入門 監視")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2HYq4IA"}),"論理学")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2UGUep4"}),"基礎からわかる Elm")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/31mhwmo"}),"Webフロントエンド ハイパフォーマンス チューニング")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/31cjJRo"}),"ハイパフォーマンス ブラウザネットワーキング ―ネットワークアプリケーションのためのパフォーマンス最適化")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2UNyrfh"}),"The Go Programming Language")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2ZNYO9P"}),"Go Programming Blueprints")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2Ln4y2u"}),"プログラミング言語Goフレーズブック")),Object(c.a)("li",{parentName:"ul"},Object(c.a)("a",u({parentName:"li"},{href:"https://amzn.to/2NQ01qV"}),"Third-Party JavaScript"))))}j.isMDXComponent=!0},33:function(e,a,t){var l=t(34);"string"==typeof l&&(l=[[e.i,l,""]]);var n={insert:"head",singleton:!1};t(3)(l,n);l.locals&&(e.exports=l.locals)},34:function(e,a,t){}},[[15,5,6]],[0,8]]);